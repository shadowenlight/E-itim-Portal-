// <auto-generated />
using System;
using Eğitim_Portalı.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Eğitim_Portalı.Migrations
{
    [DbContext(typeof(EğitimPortalıDbContext))]
    [Migration("20231107134502_EğitimPortalıDb")]
    partial class EğitimPortalıDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Eğitim_Portalı.Models.AlınanEğitim", b =>
                {
                    b.Property<int>("aEğitimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("aEğitimId"));

                    b.Property<string>("aEğitimAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("aEğitimDurumu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("alımTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("güncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int?>("kullanıcıId")
                        .HasColumnType("int");

                    b.HasKey("aEğitimId");

                    b.HasIndex("kullanıcıId");

                    b.ToTable("alınanEğitimler");
                });

            modelBuilder.Entity("Eğitim_Portalı.Models.Eğitim", b =>
                {
                    b.Property<int>("eğitimId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("eğitimId"));

                    b.Property<int>("eğitimSüresiGün")
                        .HasColumnType("int");

                    b.Property<string>("eğitmenBilgisi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("güncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("günlükFiyat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("kategori")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("kontenjan")
                        .HasColumnType("int");

                    b.Property<DateTime>("oluşturmaTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("eğitimId");

                    b.ToTable("eğitimler");
                });

            modelBuilder.Entity("Eğitim_Portalı.Models.Kullanıcı", b =>
                {
                    b.Property<int>("kullanıcıId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("kullanıcıId"));

                    b.Property<int>("aEğitimId")
                        .HasColumnType("int");

                    b.Property<string>("kullanıcıAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("mailAdresi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("oluşturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("rolId")
                        .HasColumnType("int");

                    b.Property<DateTime>("sonGiriş")
                        .HasColumnType("datetime2");

                    b.Property<string>("şifre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("kullanıcıId");

                    b.HasIndex("rolId");

                    b.ToTable("kullanıcılar");
                });

            modelBuilder.Entity("Eğitim_Portalı.Models.Rol", b =>
                {
                    b.Property<int>("rolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("rolId"));

                    b.Property<DateTime>("güncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("oluşturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("rolAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rolTanımı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("rolId");

                    b.ToTable("roller");
                });

            modelBuilder.Entity("Eğitim_Portalı.Models.Yetki", b =>
                {
                    b.Property<int>("yetkiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("yetkiId"));

                    b.Property<DateTime>("güncellemeTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("oluşturmaTarihi")
                        .HasColumnType("datetime2");

                    b.Property<string>("yetkiAdı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("yetkiTanımı")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("yetkiId");

                    b.ToTable("yetkiler");
                });

            modelBuilder.Entity("RolYetki", b =>
                {
                    b.Property<int>("rollerrolId")
                        .HasColumnType("int");

                    b.Property<int>("yetkileryetkiId")
                        .HasColumnType("int");

                    b.HasKey("rollerrolId", "yetkileryetkiId");

                    b.HasIndex("yetkileryetkiId");

                    b.ToTable("RolYetki");
                });

            modelBuilder.Entity("Eğitim_Portalı.Models.AlınanEğitim", b =>
                {
                    b.HasOne("Eğitim_Portalı.Models.Kullanıcı", null)
                        .WithMany("alınanEğitimler")
                        .HasForeignKey("kullanıcıId");
                });

            modelBuilder.Entity("Eğitim_Portalı.Models.Kullanıcı", b =>
                {
                    b.HasOne("Eğitim_Portalı.Models.Rol", "rol")
                        .WithMany("kullanıcılar")
                        .HasForeignKey("rolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("rol");
                });

            modelBuilder.Entity("RolYetki", b =>
                {
                    b.HasOne("Eğitim_Portalı.Models.Rol", null)
                        .WithMany()
                        .HasForeignKey("rollerrolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Eğitim_Portalı.Models.Yetki", null)
                        .WithMany()
                        .HasForeignKey("yetkileryetkiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Eğitim_Portalı.Models.Kullanıcı", b =>
                {
                    b.Navigation("alınanEğitimler");
                });

            modelBuilder.Entity("Eğitim_Portalı.Models.Rol", b =>
                {
                    b.Navigation("kullanıcılar");
                });
#pragma warning restore 612, 618
        }
    }
}
